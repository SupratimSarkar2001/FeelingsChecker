{"version":3,"sources":["components/Navbar.jsx","components/NewPost.jsx","App.js","index.js"],"names":["Navbar","className","NewPost","image","url","width","height","imgRef","useRef","canvasRef","handleImage","a","faceapi","current","withFaceLandmarks","withFaceExpressions","detections","innerHtml","resized","drawDetections","drawFaceLandmarks","drawFaceExpressions","useEffect","Promise","all","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceExpressionNet","then","catch","e","console","log","style","ref","crossOrigin","src","alt","type","placeholder","onClick","alert","App","useState","file","setFile","setImage","img","Image","URL","createObjectURL","onload","getImage","htmlFor","onChange","target","files","id","display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAQeA,EARA,WACX,OACI,qBAAKC,UAAU,SAAf,SACK,sD,+BC6EEC,EA7EC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACTC,EAAuBD,EAAvBC,IAAKC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAIdC,EAASC,mBACTC,EAAYD,mBAEZE,EAAW,uCAAG,8BAAAC,EAAA,sEACOC,IACvBL,EAAOM,QACP,IAAID,KACJE,oBACDC,sBALiB,OACZC,EADY,OAOlBP,EAAUI,QAAQI,UAAUL,IAA8BL,EAAOM,SACjED,IAAwBH,EAAUI,QAAQ,CACxCR,MAAM,IACNC,OAAO,MAEHY,EAAQN,IAAsBI,EAAW,CAC7CX,MAAM,IACNC,OAAO,MAGTM,IAAaO,eAAeV,EAAUI,QAAQK,GAC9CN,IAAaQ,kBAAkBX,EAAUI,QAAQK,GACjDN,IAAaS,oBAAoBZ,EAAUI,QAAQK,GAnBjC,2CAAH,qDAyCjB,OAjBAI,qBAAU,WAWRf,EAAOM,SATLU,QAAQC,IAAI,CACVZ,IAAaa,iBAAiBC,YAAY,WAC1Cd,IAAae,kBAAkBD,YAAY,WAC3Cd,IAAagB,kBAAkBF,YAAY,aAE1CG,KAAKnB,GACLoB,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,QAI7B,IAMD,sBAAK9B,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAOiC,MAAO,CAAE7B,QAAOC,UAAtC,UACE,qBAAKL,UAAU,QAAQkC,IAAK5B,EAAQ6B,YAAY,YAAYC,IAAKjC,EAAKkC,IAAI,KAC1E,wBAEEH,IAAK1B,EACLJ,MAAOA,EACPC,OAAQA,OAIZ,sBAAKL,UAAU,QAAf,UACE,qDACA,uBACEsC,KAAK,OACLC,YAAY,uBACZvC,UAAU,eAGZ,wBAAQA,UAAU,cAAcwC,QAAS,WACvCC,MAAM,qCADR,yBCOOC,MAzEf,WACE,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,qBAA1B,mBAAOzC,EAAP,KAAc4C,EAAd,KAkBA,OAhBAzB,qBAAU,WAaRuB,GAZiB,WACf,IAAMG,EAAM,IAAIC,MAChBD,EAAIX,IAAMa,IAAIC,gBAAgBN,GAC9BG,EAAII,OAAS,WACXL,EAAS,CACP3C,IAAK4C,EAAIX,IACThC,MAAO2C,EAAI3C,MACXC,OAAQ0C,EAAI1C,UAKV+C,KACP,CAACR,IAGF,gCACE,cAAC,EAAD,IACC1C,EACC,cAAC,EAAD,CAASA,MAAOA,IAEhB,qBAAKF,UAAU,cAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBACEoC,IAAI,2GACJC,IAAI,GACJrC,UAAU,WAEZ,sBAAKA,UAAU,WAAf,UACE,uBACEsC,KAAK,OACLC,YAAY,uBACZvC,UAAU,cAEZ,wBAAOqD,QAAQ,OAAf,UACE,qBACErD,UAAU,SACVoC,IAAI,mFACJC,IAAI,KAEN,qBACErC,UAAU,SACVoC,IAAI,oEACJC,IAAI,KAEN,qBACErC,UAAU,SACVoC,IAAI,qEACJC,IAAI,KAEN,wBAAQG,QAAS,WACfC,MAAM,+DADR,qBAIF,uBACEa,SAAU,SAACxB,GAAD,OAAOe,EAAQf,EAAEyB,OAAOC,MAAM,KACxCC,GAAG,OACHxB,MAAO,CAAEyB,QAAS,QAClBpB,KAAK,qBC/DrBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fde5c6f9.chunk.js","sourcesContent":["const Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n             <span>FeelingsChecker</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import { useEffect, useRef} from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\n\r\nconst NewPost = ({ image }) => {\r\n  const { url, width, height } = image;\r\n\r\n\r\n\r\n  const imgRef = useRef();\r\n  const canvasRef = useRef();\r\n\r\n  const handleImage = async () => {\r\n    const detections = await faceapi.detectAllFaces(\r\n      imgRef.current,\r\n      new faceapi.TinyFaceDetectorOptions()\r\n    ).withFaceLandmarks()\r\n    .withFaceExpressions();\r\n\r\n    canvasRef.current.innerHtml=faceapi.createCanvasFromMedia(imgRef.current);\r\n    faceapi.matchDimensions(canvasRef.current,{\r\n      width:400,\r\n      height:400\r\n    })\r\n    const resized=faceapi.resizeResults(detections,{\r\n      width:400,\r\n      height:400\r\n    })\r\n    \r\n    faceapi.draw.drawDetections(canvasRef.current,resized);\r\n    faceapi.draw.drawFaceLandmarks(canvasRef.current,resized);\r\n    faceapi.draw.drawFaceExpressions(canvasRef.current,resized);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const loadModels = () => {\r\n      Promise.all([\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"),\r\n        faceapi.nets.faceExpressionNet.loadFromUri(\"/models\"),\r\n      ])\r\n        .then(handleImage)\r\n        .catch((e) => console.log(e));\r\n    };\r\n\r\n    imgRef.current && loadModels();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"left\" style={{ width, height }}>\r\n        <img className=\"image\" ref={imgRef} crossOrigin=\"anonymous\" src={url} alt=\"\" />\r\n        <canvas\r\n         \r\n          ref={canvasRef}\r\n          width={width}\r\n          height={height}\r\n        />\r\n\r\n      </div>\r\n      <div className=\"right\">\r\n        <h1>Share your Feelings</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          className=\"rightInput\"\r\n        />\r\n\r\n        <button className=\"rightButton\" onClick={()=>{\r\n          alert(\"Thanks for sharing Your feelings\")\r\n        }}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n\r\n","\nimport { useEffect, useState } from \"react\";\nimport \"./app.css\";\nimport Navbar from \"./components/Navbar\";\nimport NewPost from \"./components/NewPost\";\n\nfunction App() {\n  const [file, setFile] = useState();\n  const [image, setImage] = useState();\n\n  useEffect(() => {\n    const getImage = () => {\n      const img = new Image();\n      img.src = URL.createObjectURL(file);\n      img.onload = () => {\n        setImage({\n          url: img.src,\n          width: img.width,\n          height: img.height,\n        });\n      };\n    };\n\n    file && getImage();\n  }, [file]);\n\n  return (\n    <div>\n      <Navbar />\n      {image ? (\n        <NewPost image={image} />\n      ) : (\n        <div className=\"newPostCard\">\n          <div className=\"addPost\">\n            <img\n              src=\"https://images.pexels.com/photos/9371782/pexels-photo-9371782.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n              alt=\"\"\n              className=\"avatar\"\n            />\n            <div className=\"postForm\">\n              <input\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                className=\"postInput\"\n              />\n              <label htmlFor=\"file\">\n                <img\n                  className=\"addImg\"\n                  src=\"https://cdn.icon-icons.com/icons2/564/PNG/512/Add_Image_icon-icons.com_54218.png\"\n                  alt=\"\"\n                />\n                <img\n                  className=\"addImg\"\n                  src=\"https://icon-library.com/images/maps-icon-png/maps-icon-png-5.jpg\"\n                  alt=\"\"\n                />\n                <img\n                  className=\"addImg\"\n                  src=\"https://d29fhpw069ctt2.cloudfront.net/icon/image/84451/preview.svg\"\n                  alt=\"\"\n                />\n                <button onClick={()=>{\n                  alert(\"I see! You can put your image to see how you are feeling!!\")\n                }}>Send</button>\n              </label>\n              <input\n                onChange={(e) => setFile(e.target.files[0])}\n                id=\"file\"\n                style={{ display: \"none\" }}\n                type=\"file\"\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}